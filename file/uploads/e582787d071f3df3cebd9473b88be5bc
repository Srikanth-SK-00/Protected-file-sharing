const express = require("express");
const bcrypt =require("bcrypt");
require("dotenv").config()
const app = express();
app.use(express.urlencoded({extended: true}));
const File=require('./models/file');
const multer=require("multer");
const mongoose=require("mongoose")
const upload=multer({dest:"uploads"});
mongoose.connect('mongodb://127.0.0.1/filesharing')
app.set("view engine","ejs")

app.get('/',(req, res)=>
{
    res.render('index')
})
app.post('/upload',upload.single("file"),async(req, res)=>
{
   const filedata={
    path:req.file.path,
    originalname:req.file.originalname
   }
   if(req.body.password!=null && req.body.password !=="")
   {
     filedata.password = await bcrypt.hash(req.body.password,10)
   }
   const file=await File.create(filedata)
   console.log(file)
   res.render("index",{filelink:`${req.headers.origin}/file/${file.id}`})

   

})
app.get('/file/:id'),async (req,res)=>
{
 const file=await File.findById(req.params.id);
 if(file.password !=null)
 {
    if(file.password==null)
    {
        res.render("password")
        return
    }
 }
 file.downloadcount++;
 await file.save();
res.dowmload(file.path,file.originalname);


}
app.listen(3000)